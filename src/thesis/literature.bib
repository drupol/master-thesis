@inproceedings{10-1007-978-3-319-27308-2_47,
  title         = {Reproducible and User-Controlled Software Environments in HPC with Guix},
  author        = {Court\`{e}s, Ludovic and Wurmus, Ricardo},
  year          = {2015},
  booktitle     = {Euro-Par 2015: Parallel Processing Workshops},
  publisher     = {Springer International Publishing},
  address       = {Cham},
  pages         = {579--591},
  doi           = {10.1007/978-3-319-27308-2_47},
  isbn          = {978-3-319-27308-2},
  abstract      = {Support teams of high-performance computing (HPC) systems often find themselves between a rock and a hard place: on one hand, they understandably administrate these large systems in a conservative way, but on the other hand, they try to satisfy their users by deploying up-to-date tool chains as well as libraries and scientific software. HPC system users often have no guarantee that they will be able to reproduce results at a later point in time, even on the same system---software may have been upgraded, removed, or recompiled under their feet, and they have little hope of being able to reproduce the same software environment elsewhere. We present GNU~Guix and the functional package management paradigm and show how it can improve reproducibility and sharing among researchers with representative use cases.}
}
@article{4785860,
  title         = {Cramming more components onto integrated circuits, Reprinted from Electronics, volume 38, number 8, April 19, 1965, pp.114 ff.},
  author        = {Moore, Gordon E.},
  year          = {2006},
  journal       = {IEEE Solid-State Circuits Society Newsletter},
  volume        = {11},
  number        = {3},
  pages         = {33--35},
  doi           = {10.1109/N-SSC.2006.4785860},
  keywords      = {Integrated circuits;Computers;Silicon;Films;Heating;Microwave amplifiers;Data mining}
}
@article{8509170,
  title         = {DLL Hell: Software Dependencies, Failure, and the Maintenance of Microsoft Windows},
  author        = {Dick, Stephanie and Volmar, Daniel},
  year          = {2018},
  journal       = {IEEE Annals of the History of Computing},
  volume        = {40},
  number        = {4},
  pages         = {28--51},
  doi           = {10.1109/MAHC.2018.2877913},
  keywords      = {Microsoft Windows;History;Software development;Software maintenance;Software engineering}
}
@article{9403875,
  title         = {Toward Long-Term and Archivable Reproducibility},
  author        = {Akhlaghi, Mohammad and Infante-Sainz, Ra\'{u}l and Roukema, Boudewijn F. and Khellat, Mohammadreza and Valls-Gabaud, David and Baena-Gall\'{e}, Roberto},
  year          = {2021},
  journal       = {Computing in Science \& Engineering},
  volume        = {23},
  number        = {3},
  pages         = {82--91},
  doi           = {10.1109/MCSE.2021.3072860},
  keywords      = {Data engineering;Computer applications;Database systems;Information technology;Virtual machining;Knowledge management;Workflow management software;Workflow management;Systems;Database Management;Information Technology and Systems;Knowledge and data engineering tools and techniques;Computers in Other Systems;Computer Applications}
}
@inproceedings{9978190,
  title         = {On the    in Software Development Repositories},
  author        = {Decan, Alexandre and Mens, Tom and Mazrae, Pooya Rostami and Golzadeh, Mehdi},
  year          = {2022},
  booktitle     = {2022 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  pages         = {235--245},
  doi           = {10.1109/ICSME55016.2022.00029},
  keywords      = {Software maintenance;Automation;Codes;Collaborative software;Ecosystems;Semantics;Collaboration;GitHub Actions;continuous integration;collaborative software development;workflow automation}
}
@article{abs-2104-06020,
  title         = {Reproducible Builds: Increasing the Integrity of Software Supply Chains},
  author        = {Chris Lamb and Stefano Zacchiroli},
  year          = {2021},
  journal       = {CoRR},
  volume        = {abs/2104.06020},
  doi           = {10.48550/arXiv.2104.06020},
  eprinttype    = {arXiv},
  eprint        = {2104.06020},
  timestamp     = {Mon, 19 Apr 2021 16:45:47 +0200},
  biburl        = {https://dblp.org/rec/journals/corr/abs-2104-06020.bib},
  bibsource     = {dblp computer science bibliography, https://dblp.org}
}
@misc{acm_artifact_review_badging,
  title         = {Artifact Review and Badging},
  author        = {{Association for Computing Machinery}},
  year          = {2020},
  url           = {https://www.acm.org/publications/policies/artifact-review-and-badging-current},
  shortauthor   = {ACM}
}
@article{Acm2018,
  title         = {Reproducibility in Scientific Computing},
  author        = {Ivie, Peter and Thain, Douglas},
  year          = {2018},
  month         = jul,
  journal       = {ACM Comput. Surv.},
  publisher     = {Association for Computing Machinery},
  address       = {New York, NY, USA},
  volume        = {51},
  number        = {3},
  doi           = {10.1145/3186266},
  issn          = {0360-0300},
  issue_date    = {May 2019},
  abstract      = {Reproducibility is widely considered to be an essential requirement of the scientific process. However, a number of serious concerns have been raised recently, questioning whether today's computational work is adequately reproducible. In principle, it should be possible to specify a computation to sufficient detail that anyone should be able to reproduce it exactly. But in practice, there are fundamental, technical, and social barriers to doing so. The many objectives and meanings of reproducibility are discussed within the context of scientific computing. Technical barriers to reproducibility are described, extant approaches surveyed, and open areas of research are identified.},
  articleno     = {63},
  numpages      = {36},
  keywords      = {computational science, replicability, reproducible, workflows, scientific computing, scientific workflow, scientific workflows, workflow, Reproducibility}
}
@software{ansible,
  title         = {Ansible},
  author        = {{Ansible}},
  year          = {2012},
  url           = {https://www.ansible.com/}
}
@misc{aux,
  title         = {Aux},
  author        = {{Aux}},
  year          = {2024},
  url           = {https://aux.computer/}
}
@book{Bacon1928,
  title         = {Opus Majus, Volumes 1 and 2},
  author        = {Roger Bacon},
  year          = {1928},
  publisher     = {University of Pennsylvania Press},
  address       = {Philadelphia},
  doi           = {10.9783/9781512814064},
  isbn          = {9781512814064},
  origdate      = {1267}
}
@article{Barba2018,
  title         = {Terminologies for Reproducible Research},
  author        = {Lorena A. Barba},
  year          = {2018},
  month         = feb,
  journal       = {arXiv},
  doi           = {10.48550/arXiv.1802.03311},
  eprint        = {1802.03311},
  archiveprefix = {arXiv}
}
@misc{barba2022definingroleopensource,
  title         = {Defining the role of open source software in research reproducibility},
  author        = {Lorena A. Barba},
  year          = {2022},
  url           = {https://arxiv.org/abs/2204.12564},
  eprint        = {2204.12564},
  archiveprefix = {arXiv},
  primaryclass  = {cs.CY}
}
@article{cacioppo2015social,
  title         = {Social, behavioral, and economic sciences perspectives on robust and reliable science},
  author        = {Cacioppo, John T and Kaplan, Robert M and Krosnick, Jon A and Olds, James L and Dean, Heather},
  year          = {2015}
}
@article{Castillo1669,
  title         = {The Scientific Method: A Need for Something Better?},
  author        = {M. Castillo},
  year          = {2013},
  journal       = {American Journal of Neuroradiology},
  publisher     = {American Journal of Neuroradiology},
  volume        = {34},
  number        = {9},
  pages         = {1669--1671},
  doi           = {10.3174/ajnr.A3401},
  issn          = {0195-6108}
}
@misc{CCBy40,
  title         = {Creative Commons Attribution 4.0 International},
  author        = {{Creative Commons}},
  year          = {2013},
  url           = {https://creativecommons.org/licenses/by/4.0/}
}
@software{chef,
  title         = {Chef},
  author        = {{Chef}},
  year          = {2009},
  url           = {https://www.chef.io/}
}
@inbook{Claerbout1992,
  title         = {Electronic documents give reproducible research a new meaning},
  author        = {Jon F. Claerbout and Martin Karrenbach},
  year          = {1992},
  booktitle     = {SEG Technical Program Expanded Abstracts 1992},
  pages         = {601--604},
  doi           = {10.1190/1.1822162},
  origdate      = {1992}
}
@book{clarke1973,
  title         = {Profiles of the Future; an Inquiry into the Limits of the Possible},
  author        = {Clarke, Arthur C.},
  year          = {1973},
  publisher     = {Harper \& Row}
}
@article{Collberg2012,
  title         = {Repeatability in Computer Systems Research},
  author        = {Collberg, Christian and Proebsting, Todd A.},
  year          = {2016},
  month         = feb,
  journal       = {Commun. ACM},
  publisher     = {Association for Computing Machinery},
  address       = {New York, NY, USA},
  volume        = {59},
  number        = {3},
  pages         = {62â€“69},
  doi           = {10.1145/2812803},
  issn          = {0001-0782},
  issue_date    = {March 2016},
  abstract      = {To encourage repeatable research, fund repeatability engineering and reward commitments to sharing research artifacts.},
  numpages      = {8}
}
@misc{composer,
  title         = {Composer},
  author        = {Adermann, Nils and Boggiano, Jordi},
  year          = {2011},
  url           = {https://getcomposer.org/}
}
@article{courtes_2022_6581453,
  title         = {Building a Secure Software Supply Chain with GNU Guix},
  author        = {Court\`{e}s, Ludovic},
  year          = {2022},
  month         = jun,
  journal       = {The Art, Science, and Engineering of Programming},
  publisher     = {Aspect-Oriented Software Association (AOSA)},
  volume        = {7},
  number        = {1},
  doi           = {10.22152/programming-journal.org/2023/7/1},
  issn          = {2473-7321}
}
@misc{courtes2013functional,
  title         = {Functional Package Management with Guix},
  author        = {Court\`{e}s, Ludovic},
  year          = {2013},
  doi           = {10.48550/arXiv.1305.4584},
  eprint        = {1305.4584},
  archiveprefix = {arXiv},
  primaryclass  = {cs.PL}
}
@book{CRA,
  title         = {Cyber Resilience Act},
  author        = {{European Union}},
  year          = {2022},
  url           = {https://www.cyberresilienceact.eu/}
}
@misc{CVE-2024-3094,
  title         = {{CVE}-2024-3094},
  author        = {{National Institute of Standards and Technology}},
  year          = {2024},
  month         = mar,
  url           = {https://nvd.nist.gov/vuln/detail/CVE-2024-3094},
  urldate       = {7 April 2024}
}
@misc{cyclonedx,
  title         = {CycloneDX},
  author        = {{CycloneDX}},
  year          = {2019},
  url           = {https://cyclonedx.org/}
}
@misc{devcontainer,
  title         = {DevContainer},
  author        = {{Microsoft}},
  year          = {2021},
  url           = {https://containers.dev/}
}
@misc{devs-profile,
  title         = {Devs profile},
  author        = {{European Commission}},
  year          = {2022},
  url           = {https://code.europa.eu/ecphp/devs-profile}
}
@misc{diffoscope,
  title         = {diffoscope},
  author        = {{Reproducible Builds}},
  year          = {2014},
  url           = {https://diffoscope.org}
}
@misc{docker,
  title         = {Docker},
  author        = {{Docker, Inc.}},
  year          = {2013},
  url           = {https://www.docker.com/}
}
@misc{dockerhub,
  title         = {Docker Hub},
  author        = {{Docker, Inc.}},
  year          = {2013},
  url           = {https://hub.docker.com/}
}
@misc{dockerhubphpimage,
  title         = {Docker PHP images},
  author        = {{Docker, Inc.}},
  year          = {2013},
  url           = {https://hub.docker.com/_/php/}
}
@misc{dockerofficialimages,
  title         = {What are official images},
  author        = {Docker Inc.},
  year          = {2024},
  url           = {https://github.com/docker-library/official-images/blob/6b4803e65a2c56f15b91f8a11bd90f0bcb756c1c/README.md#what-are-official-images}
}
@phdthesis{Dolstra2006,
  title         = {The Purely Functional Software Deployment Model},
  author        = {Dolstra, Eelco},
  year          = {2006},
  month         = jan,
  address       = {Utrecht, The Netherlands},
  url           = {https://dspace.library.uu.nl/handle/1874/7540},
  tags          = {programming languages, rule-based, deployment, completeness, meta programming, software components, meta-model, modeling language, modeling, language modeling, functional programming, software component, source-to-source, information models, programming, Meta-Environment, process modeling, systematic-approach, open-source},
  researchr     = {https://researchr.org/publication/Dolstra2006},
  school        = {Utrecht University},
  advisor       = {Eelco Visser and S. Doaitse Swierstra}
}
@article{Donoho2009,
  title         = {Reproducible Research in Computational Harmonic Analysis},
  author        = {Donoho, David L. and Maleki, Arian and Rahman, Inam Ur and Shahram, Morteza and Stodden, Victoria},
  year          = {2009},
  journal       = {Computing in Science \& Engineering},
  volume        = {11},
  number        = {1},
  pages         = {8--18},
  doi           = {10.1109/MCSE.2009.15}
}
@misc{drupolComposerReproduciblePr,
  title         = {Composer reproducible pull request},
  author        = {{Github Composer project}},
  year          = {2021},
  url           = {https://github.com/composer/composer/pull/11663}
}
@misc{drupolGrumphpIssue1095,
  title         = {Consider adding a composer.lock file in the repository},
  author        = {{Github GrumPHP project}},
  year          = {2023},
  url           = {https://github.com/phpro/grumphp/issues/1095}
}
@misc{drupolIpc2023Talk,
  title         = {Leverage Nix in the PHP ecosystem},
  author        = {{International PHP Conference}},
  year          = {2023},
  url           = {https://phpconference.com/web-development/leveraging-nix-php-ecosystem/}
}
@misc{DrupolNixCommitter,
  title         = {Nixpkgs committer grant},
  author        = {Dellaiera, Pol},
  year          = {2023},
  url           = {https://github.com/NixOS/nixpkgs/issues/50105#issuecomment-1571885173}
}
@misc{drupolNixpkgsCommitter,
  title         = {Nixpkgs committer},
  year          = {2023},
  url           = {https://github.com/orgs/NixOS/teams/nixpkgs-committers?query=drupol}
}
@misc{drupolPhpBuilderOnNix,
  title         = {Nix builder for PHP applications},
  author        = {{Github NixOS project}},
  year          = {2021},
  url           = {https://github.com/NixOS/nixpkgs/pull/225401}
}
@misc{drupolPhpBuilderOnNixV2,
  title         = {Nix builder for PHP applications, version 2},
  author        = {{Github NixOS project}},
  year          = {2024},
  url           = {https://github.com/NixOS/nixpkgs/pull/308059}
}
@misc{drupolPhpCsFixerIssue7590,
  title         = {Publish composer.lock for each release},
  author        = {{Github PHP-CS-Fixer project}},
  year          = {2023},
  url           = {https://github.com/PHP-CS-Fixer/PHP-CS-Fixer/issues/7590}
}
@misc{drupolPhpmdIssue1056,
  title         = {Adding composer.lock in VCS ?},
  author        = {{Github PHPMD project}},
  year          = {2023},
  url           = {https://github.com/phpmd/phpmd/issues/1056}
}
@misc{drupolPhpParallelLintIssue153,
  title         = {Adding composer.lock under VCS ?},
  author        = {{Github PHP Parallel Lint project}},
  year          = {2023},
  url           = {https://github.com/php-parallel-lint/PHP-Parallel-Lint/issues/153}
}
@misc{drupolPhpunitPR5576,
  title         = {Add composer.lock},
  author        = {{Github PHPunit project}},
  year          = {2023},
  url           = {https://github.com/sebastianbergmann/phpunit/pull/5576}
}
@online{drupolPrOnNix,
  title         = {Pol Dellaiera's pull requests in the Nix project},
  author        = {{Github NixOS project}},
  year          = {2021},
  url           = {https://github.com/NixOS/nixpkgs/pulls?page=1&q=is%3Apr+is%3Aclosed+author%3Adrupol}
}
@misc{drupolPsalmIssue10446,
  title         = {Adding composer.lock in VCS ?},
  author        = {{Github Psalm project}},
  year          = {2023},
  url           = {https://github.com/vimeo/psalm/issues/10446}
}
@misc{drupolPsyshIssue767,
  title         = {Consider adding a composer.lock file in the repository},
  author        = {{Github Psysh project}},
  year          = {2023},
  url           = {https://github.com/bobthecow/psysh/issues/767}
}
@misc{drupolRBMonthlyReports,
  title         = {{Git repository of the reproducible-builds.org website}},
  year          = {2024},
  url           = {https://salsa.debian.org/reproducible-builds/reproducible-website/-/commits/master?author=Pol%20Dellaiera}
}
@misc{drupolRBPR102,
  title         = {flake: add Nix flake files},
  author        = {{Reproducible Builds project}},
  year          = {2023},
  url           = {https://salsa.debian.org/reproducible-builds/reproducible-website/-/merge_requests/102}
}
@misc{drupolRBPR113,
  title         = {Add bibliography.bib file to the repository and update Academic Publications page accordingly},
  author        = {{Reproducible Builds project}},
  year          = {2023},
  url           = {https://salsa.debian.org/reproducible-builds/reproducible-website/-/merge_requests/113}
}
@misc{drupolRBPR114,
  title         = {buy-in: add SBOM and ephemeral development environments},
  author        = {{Reproducible Builds project}},
  year          = {2023},
  url           = {https://salsa.debian.org/reproducible-builds/reproducible-website/-/merge_requests/114}
}
@misc{drupolReviewOnNix,
  title         = {Pol Dellaiera's reviews in the Nix project},
  author        = {{Github NixOS project}},
  year          = {2021},
  url           = {https://github.com/NixOS/nixpkgs/pulls?q=is%3Apr+is%3Aclosed+reviewed-by%3Adrupol}
}
@misc{ecphpSessions,
  title         = {ECPHP Sessions},
  author        = {{European Commission}},
  year          = {2020},
  url           = {https://code.europa.eu/ecphp/sessions}
}
@article{ESSAWY2020104753,
  title         = {A taxonomy for reproducible and replicable research in environmental modelling},
  author        = {Bakinam T. Essawy and Jonathan L. Goodall and Daniel Voce and Mohamed M. Morsy and Jeffrey M. Sadler and Young Don Choi and David G. Tarboton and Tanu Malik},
  year          = {2020},
  journal       = {Environmental Modelling \& Software},
  volume        = {134},
  pages         = {104753},
  doi           = {10.1016/j.envsoft.2020.104753},
  issn          = {1364-8152},
  keywords      = {Reproducibility, Replicability, Containers, Docker, Singularity},
  abstract      = {Despite the growing acknowledgment of reproducibility crisis in computational science, there is still a lack of clarity around what exactly constitutes a reproducible or replicable study in many computational fields, including environmental modelling. To this end, we put forth a taxonomy that defines an environmental modelling study as being either 1) repeatable, 2) runnable, 3) reproducible, or 4) replicable. We introduce these terms with illustrative examples from hydrology using a hydrologic modelling framework along with cyberinfrastructure aimed at fostering reproducibility. Using this taxonomy as a guide, we argue that containerization is an important but lacking component needed to achieve the goal of computational reproducibility in hydrology and environmental modelling. Examples from hydrology are provided to demonstrate how new tools, including a user-friendly tool for containerization of computational analyses called Sciunit, can lower the barrier to reproducibility and replicability in the environmental modelling community.}
}
@misc{Executive-Order-14028,
  title         = {Executive Order 14028: Improving the Nation's Cybersecurity},
  author        = {{Joe Biden}},
  year          = {2021},
  url           = {https://www.federalregister.gov/d/2021-10460}
}
@misc{fsfwebsite,
  title         = {The Free Software Foundation},
  author        = {{Free Software Foundation}},
  year          = {1985},
  url           = {https://www.fsf.org/}
}
@misc{ghActions,
  title         = {GitHub Actions},
  url           = {https://github.com/features/actions}
}
@software{git,
  title         = {Git},
  author        = {Linus Torvalds},
  year          = {2005},
  url           = {https://git-scm.com/}
}
@misc{githubSBOMPURL,
  title         = {Generated SBOM files will now include a package URL when a manifest file includes a range},
  author        = {{GitHub}},
  year          = {2024},
  url           = {https://github.blog/changelog/2024-06-11-generated-sbom-files-will-now-include-a-package-url-when-a-manifest-file-includes-a-range/}
}
@misc{gnumake,
  title         = {GNU Make},
  author        = {{The Free Software Foundation}},
  url           = {https://www.gnu.org/software/make/}
}
@article{Goodman2016,
  title         = {What does research reproducibility mean?},
  author        = {Steven N. Goodman  and Daniele Fanelli  and John P. A. Ioannidis},
  year          = {2016},
  journal       = {Science Translational Medicine},
  volume        = {8},
  number        = {341},
  pages         = {341ps12--341ps12},
  doi           = {10.1126/scitranslmed.aaf5027},
  abstract      = {The language and conceptual framework of ``research reproducibility'' are nonstandard and unsettled across the sciences. The language and conceptual framework of ``research reproducibility'' are nonstandard and unsettled across the sciences. In this Perspective, we review an array of explicit and implicit definitions of reproducibility and related terminology, and discuss how to avoid potential misunderstandings when these terms are used as a surrogate for ``truth.''}
}
@software{guile,
  title         = {GNU Guile},
  author        = {Jaffer, Aubrey and Lord, Tom and Bader, Miles},
  year          = {1993},
  url           = {https://www.gnu.org/software/guile/}
}
@misc{guixwebsite,
  title         = {Guix Website},
  author        = {{Guix}},
  year          = {2012},
  url           = {https://guix.gnu.org/}
}
@inproceedings{hal-01865790,
  title         = {{Identifiers for Digital Objects: the Case of Software Source Code Preservation}},
  author        = {Di Cosmo, Roberto and Gruenpeter, Morane and Zacchiroli, Stefano},
  year          = {2018},
  month         = Sep,
  booktitle     = {{iPRES 2018 - 15th International Conference on Digital Preservation}},
  address       = {Boston, United States},
  pages         = {1--9},
  doi           = {10.17605/OSF.IO/KDE56},
  url           = {https://hal.science/hal-01865790},
  pdf           = {https://hal.science/hal-01865790v4/file/main.pdf},
  hal_id        = {hal-01865790},
  hal_version   = {v4}
}
@article{Heartbleed101,
  title         = {Heartbleed 101},
  author        = {Carvalho, Marco and DeMott, Jared and Ford, Richard and Wheeler, David A.},
  year          = {2014},
  journal       = {IEEE Security \& Privacy},
  volume        = {12},
  number        = {4},
  pages         = {63--67},
  doi           = {10.1109/MSP.2014.66},
  keywords      = {Electronic commerce;Software development;Payloads;Privacy;Computer crashes;Resource management;cybercrime;security;hackers;Heartbleed}
}
@misc{hemel_2024_12906987,
  title         = {NixOS: the Nix based operating system},
  author        = {Hemel, Armijn},
  year          = {2006},
  month         = aug,
  publisher     = {Zenodo},
  doi           = {10.5281/zenodo.12906987},
  url           = {https://doi.org/10.5281/zenodo.12906987}
}
@article{hinsenKonrad2020guix,
  title         = {Reproducible computations with Guix},
  author        = {Hinsen, Konrad},
  year          = {2020},
  url           = {https://guix.gnu.org/en/blog/2020/reproducible-computations-with-guix/}
}
@misc{hinsenKonradFramework2020,
  title         = {The four possibilities of reproducible scientific computations},
  author        = {Hinsen, Konrad},
  doi           = {10.59350/81ba8-dse91}
}
@book{HunterGCP,
  title         = {Google Cloud Platform for Developers},
  author        = {Hunter, Ted and Porter, Steven},
  year          = {2018},
  month         = jul,
  publisher     = {Packt Publishing},
  address       = {Birmingham, England}
}
@misc{HypocraticLicence,
  title         = {The Hippocratic License 3.0},
  author        = {Ada Ehmke, Coraline},
  url           = {https://firstdonoharm.dev/}
}
@misc{ITripleE,
  title         = {IEEE website},
  author        = {{IEEE}},
  year          = {1963},
  url           = {https://www.ieee.org/}
}
@misc{joinupSignal,
  title         = {European Commission to use open source messaging service Signal},
  author        = {{Joinup - Open Source Observatory}},
  year          = {2020},
  url           = {https://joinup.ec.europa.eu/collection/open-source-observatory-osor/news/signal-messaging-service}
}
@book{kpopper1934,
  title         = {The Logic of Scientific Discovery},
  author        = {Popper, K. R.},
  year          = {1934},
  publisher     = {Hutchinson},
  address       = {London},
  added-at      = {2008-03-11T14:52:34.000+0100},
  biburl        = {https://www.bibsonomy.org/bibtex/28fc60d55651f1750c37c770e5286c132/idsia},
  interhash     = {5c732a74fb59e943849b250588538875},
  intrahash     = {8fc60d55651f1750c37c770e5286c132},
  keywords      = {juergen},
  priority      = {2},
  timestamp     = {2008-03-11T14:55:44.000+0100}
}
@software{kubernetes,
  title         = {Kubernetes},
  author        = {{Kubernetes}},
  year          = {2014},
  url           = {https://kubernetes.io/}
}
@article{Larigaldie2024,
  title         = {eyeScrollR: A software method for reproducible mapping of eye-tracking data from scrollable web pages},
  author        = {Larigaldie, Nathanael and Dreneva, Anna and Orquin, Jacob~L.},
  year          = {2024},
  month         = feb,
  day           = {12},
  journal       = {Behavior Research Methods},
  doi           = {10.3758/s13428-024-02343-1},
  issn          = {1554-3528},
  abstract      = {The Internet has become an important part of our lives and an increasing number of researchers use eye-tracking technology to examine attention and behavior in online environments. Researchers, however, face a significant challenge in mapping eye-tracking data from scrollable web pages. We describe the R package eyeScrollR for mapping eye-tracking data from scrollable content such as web pages. The package re-maps eye-tracking gaze coordinates to full-page coordinates with a deterministic algorithm based on mouse scroll data. The package includes options for handling common situations, such as sticky menus or ads that remain visible when the user scrolls. We test the package's validity in different hardware and software settings and on different web pages and show that it is highly accurate when tested against manual coding. Compared to current methods, eyeScrollR provides a more reproducible and reliable approach for mapping eye-tracking data from scrollable web pages. With its open code and free availability, we recommend eyeScrollR as an essential tool for eye-tracking researchers, particularly those who adhere to open-science principles. The eyeScrollR package offers a valuable contribution to the field of eye-tracking research, facilitating accurate and standardized analysis of eye-tracking data in web scrolling contexts.}
}
@book{LibCManual,
  title         = {The GNU C library reference manual},
  author        = {Loosemore, Sandra and Stallman, Richard and McGrath, Roland and Oram, Andrew and Drepper, Ulrich},
  year          = {2023},
  url           = {https://sourceware.org/glibc/manual/2.39/pdf/libc.pdf}
}
@misc{lix,
  title         = {Lix},
  author        = {{Lix}},
  year          = {2024},
  url           = {https://lix.systems/}
}
@inproceedings{malka-hal-04430009,
  title         = {{Reproducibility of Build Environments through Space and Time}},
  author        = {Malka, Julien and Zacchiroli, Stefano and Zimmermann, Th{\'e}o},
  year          = {2024},
  month         = apr,
  booktitle     = {{46th International Conference on Software Engineering (ICSE 2024) - New Ideas and Emerging Results (NIER) Track}},
  address       = {Lisbonne, Portugal},
  doi           = {10.48550/arXiv.2402.00424},
  keywords      = {reproducibility ; development environment ; functional package management ; nix},
  pdf           = {https://arxiv.org/pdf/2402.00424},
  hal_id        = {hal-04430009},
  hal_version   = {v1}
}
@inproceedings{malka-hal-04482192,
  title         = {{Increasing Trust in the Open Source Supply Chain with Reproducible Builds and Functional Package Management}},
  author        = {Malka, Julien},
  year          = {2024},
  month         = apr,
  booktitle     = {{46th International Conference on Software Engineering (ICSE 2024) - Doctoral Symposium (DS) Track}},
  address       = {Lisbonne, Portugal},
  doi           = {10.1145/3639478.3639806},
  url           = {https://hal.science/hal-04482192},
  keywords      = {Software supply chain ; Reproducible builds ; Functional package management},
  pdf           = {https://hal.science/hal-04482192/file/main.pdf},
  hal_id        = {hal-04482192},
  hal_version   = {v1}
}
@inproceedings{MarcelFourne2023,
  title         = {It's like flossing your teeth: On the Importance and Challenges of Reproducible Builds for Software Supply Chain Security},
  author        = {Fourn\'{e}, Marcel and Wermke, Dominik and Enck, William and Fahl, Sascha and Acar, Yasemin},
  year          = {2023},
  booktitle     = {2023 IEEE Symposium on Security and Privacy (SP)},
  pages         = {1527--1544},
  doi           = {10.1109/SP46215.2023.10179320}
}
@article{mueller2012stuxnet,
  title         = {The stuxnet worm},
  author        = {Mueller, Paul and Yadegari, Babak},
  year          = {2012},
  journal       = {D\'{e}partement des sciences de l'informatique, Universit\'{e} de l'Arizona},
  url           = {https://www2.cs.arizona.edu/~collberg/Teaching/466-566/2012/Resources/presentations/topic9-final/report.pdf}
}
@book{NAP25303,
  title         = {Reproducibility and Replicability in Science},
  author        = {National Academies of Sciences, Engineering, and Medicine},
  year          = {2019},
  publisher     = {The National Academies Press},
  address       = {Washington, DC},
  doi           = {10.17226/25303},
  isbn          = {978-0-309-48616-3},
  abstract      = {One of the pathways by which the scientific community confirms the validity of a new scientific discovery is by repeating the research that produced it. When a scientific effort fails to independently confirm the computations or results of a previous study, some fear that it may be a symptom of a lack of rigor in science, while others argue that such an observed inconsistency can be an important precursor to new discovery.\nConcerns about reproducibility and replicability have been expressed in both scientific and popular media. As these concerns came to light, Congress requested that the National Academies of Sciences, Engineering, and Medicine conduct a study to assess the extent of issues related to reproducibility and replicability and to offer recommendations for improving rigor and transparency in scientific research.\nReproducibility and Replicability in Science defines reproducibility and replicability and examines the factors that may lead to non-reproducibility and non-replicability in research. Unlike the typical expectation of reproducibility between two computations, expectations about replicability are more nuanced, and in some cases a lack of replicability can aid the process of scientific discovery. This report provides recommendations to researchers, academic institutions, journals, and funders on steps they can take to improve reproducibility and replicability in science.}
}
@misc{NewComputerModern,
  title         = {The New Computer Modern Font CTAN project},
  author        = {Tsolomitis, Antonis},
  year          = {2019},
  url           = {https://ctan.org/pkg/newcomputermodern}
}
@misc{nix,
  title         = {Nix},
  author        = {{Nix}},
  year          = {2003},
  url           = {https://nixos.org/}
}
@misc{nix24release,
  title         = {Nix 2.4 release announcement},
  author        = {Eelco Dolstra},
  year          = {2021},
  url           = {https://discourse.nixos.org/t/nix-2-4-released/15822}
}
@misc{NixOS,
  title         = {NixOS},
  author        = {Eelco Dolstra},
  year          = {2003},
  url           = {https://nixos.org/}
}
@misc{nixpkgs-pull-256270,
  title         = {stdenv: option to determine SOURCE\_DATE\_EPOCH in fetchers},
  author        = {{Github NixOS project}},
  year          = {2023},
  month         = Sep,
  url           = {https://github.com/NixOS/nixpkgs/pull/256270}
}
@misc{NixpkgsCommitters,
  title         = {Nixpkgs committers},
  author        = {{Nixpkgs}},
  url           = {https://github.com/orgs/NixOS/teams/nixpkgs-committers}
}
@misc{octoverse2022,
  title         = {The State of the Octoverse 2022},
  author        = {{GitHub}},
  year          = {2022},
  url           = {https://octoverse.github.com/2022/state-of-open-source}
}
@misc{openAIKeynote2023,
  title         = {OpenAI DevDay: Opening Keynote},
  author        = {Sam Altman},
  year          = {2023},
  url           = {https://youtu.be/U9mJuUkhUzk?t=421}
}
@misc{opencontainerinitiative,
  title         = {Open Container Initiative},
  author        = {{Open Container Initiative}},
  year          = {2015},
  url           = {https://opencontainers.org/}
}
@book{patterson2013,
  title         = {Computer Organization and Design, Fifth Edition: The Hardware/Software Interface},
  author        = {Patterson, David A. and Hennessy, John L.},
  year          = {2013},
  publisher     = {Morgan Kaufmann Publishers Inc.},
  address       = {San Francisco, CA, USA},
  isbn          = {0124077269},
  edition       = {5th},
  abstract      = {The 5th edition of Computer Organization and Design moves forward into the post-PC era with new examples, exercises, and material highlighting the emergence of mobile computing and the cloud. This generational change is emphasized and explored with updated content featuring tablet computers, cloud infrastructure, and the ARM (mobile computing devices) and x86 (cloud computing) architectures. Because an understanding of modern hardware is essential to achieving good performance and energy efficiency, this edition adds a new concrete example, "Going Faster," used throughout the text to demonstrate extremely effective optimization techniques. Also new to this edition is discussion of the "Eight Great Ideas" of computer architecture. As with previous editions, a MIPS processor is the core used to present the fundamentals of hardware technologies, assembly language, computer arithmetic, pipelining, memory hierarchies and I/O. Instructors looking for4th Edition teaching materials should e-mail textbook\@elsevier.com. Includes new examples, exercises, and material highlighting the emergence of mobile computing and the Cloud. Covers parallelism in depth with examples and content highlighting parallel hardware and software topics Features the Intel Core i7, ARM Cortex-A8 and NVIDIA Fermi GPU as real-world examples throughout the book Adds a new concrete example, "Going Faster," to demonstrate how understanding hardware can inspire software optimizations that improve performance by 200 times. Discusses and highlights the "Eight Great Ideas" of computer architecture: Performance via Parallelism; Performance via Pipelining; Performance via Prediction; Design for Moore's Law; Hierarchy of Memories; Abstraction to Simplify Design; Make the Common Case Fast; and Dependability via Redundancy. Includes a full set of updated and improved exercises.}
}
@article{Peng2009,
  title         = {{Reproducible research and Biostatistics}},
  author        = {Peng, Roger D.},
  year          = {2009},
  month         = {07},
  journal       = {Biostatistics},
  volume        = {10},
  number        = {3},
  pages         = {405--408},
  doi           = {10.1093/biostatistics/kxp014},
  issn          = {1465-4644}
}
@article{peng2011,
  title         = {Reproducible Research in Computational Science},
  author        = {Roger D. Peng},
  year          = {2011},
  journal       = {Science},
  volume        = {334},
  number        = {6060},
  pages         = {1226--1227},
  doi           = {10.1126/science.1213847},
  abstract      = {Computational science has led to exciting new developments, but the nature of the work has exposed limitations in our ability to evaluate published findings. Reproducibility has the potential to serve as a minimum standard for judging scientific claims when full independent replication of a study is not possible.}
}
@misc{php,
  title         = {PHP},
  author        = {Rasmus Lerdorf},
  year          = {1994},
  url           = {https://php.net/}
}
@misc{PhpSrcReproduciblePhar,
  title         = {Make PHAR reproducible},
  year          = {2023},
  url           = {https://github.com/theseer/Autoload/issues/114}
}
@misc{podman,
  title         = {Podman},
  author        = {{Podman}},
  year          = {2018},
  url           = {https://podman.io/}
}
@phdthesis{PolMasterThesis,
  title         = {Reproducibility in Software Engineering},
  author        = {Dellaiera, Pol},
  year          = {2024},
  month         = jul,
  doi           = {10.5281/zenodo.12666898},
  url           = {https://doi.org/10.5281/zenodo.12666898},
  school        = {University of Mons}
}
@article{preston2013semantic,
  title         = {Semantic Versioning},
  author        = {Preston-Werner, Tom},
  year          = {2013},
  url           = {https://semver.org/}
}
@software{puppet,
  title         = {Puppet},
  author        = {{Puppet}},
  year          = {2005},
  url           = {https://puppet.com/}
}
@misc{purl,
  title         = {PURL Specification},
  author        = {Philippe Ombredanne},
  year          = {2017},
  month         = Nov,
  url           = {https://github.com/package-url/purl-spec}
}
@misc{python-dockerfile-repository,
  title         = {Python 3.12 Dockerfile},
  author        = {docker-library project1},
  year          = {2024},
  url           = {https://github.com/docker-library/python/blame/31bbb37b797bd5521d6622c6d54052d6d0ede585/3.12/bookworm/Dockerfile}
}
@misc{r13yBuildScenarios,
  title         = {Reproducibility in Software Engineering},
  author        = {Dellaiera, Pol},
  year          = {2024},
  url           = {https://github.com/drupol/r13y-build-scenarios/}
}
@misc{ReproducibleBuildsOrg,
  title         = {Reproducible Builds Website},
  author        = {{Reproducible Builds}},
  year          = {2015},
  url           = {https://reproducible-builds.org/}
}
@misc{scheme,
  title         = {{T}he {S}cheme {P}rogramming {L}anguage},
  author        = {Sussman, Gerald Jay and Steele, Guy Lewis},
  year          = {1975},
  url           = {https://www.scheme.org}
}
@article{Schwab2000,
  title         = {Making scientific computations reproducible},
  author        = {Schwab, M. and Karrenbach, N. and Claerbout, J.},
  year          = {2000},
  journal       = {Computing in Science \& Engineering},
  volume        = {2},
  number        = {6},
  pages         = {61--67},
  doi           = {10.1109/5992.881708}
}
@software{signalApp,
  title         = {Signal, A private messenger},
  author        = {{Signal Foundation}},
  year          = {2013},
  url           = {https://https://signal.org}
}
@misc{SignalReproducible,
  title         = {Reproducible Signal builds for Android},
  year          = {2016},
  url           = {https://signal.org/blog/reproducible-android/}
}
@inproceedings{solarwinds-9579611,
  title         = {Solar Winds Hack: In-Depth Analysis and Countermeasures},
  author        = {Alkhadra, Rahaf and Abuzaid, Joud and AlShammari, Mariam and Mohammad, Nazeeruddin},
  year          = {2021},
  booktitle     = {2021 12th International Conference on Computing Communication and Networking Technologies (ICCCNT)},
  pages         = {1--7},
  doi           = {10.1109/ICCCNT51525.2021.9579611},
  keywords      = {Technological innovation;Computer hacking;Shape;Supply chains;Government;Companies;Software systems;cybersecurity;hack;malware;cyberattack;supply chain;supply chain attack}
}
@misc{SoN200PolDellaiera,
  title         = {Summer Of Nix 2022 - State of Nix at European Commission},
  author        = {Dellaiera, Pol},
  year          = {2022},
  url           = {https://www.youtube.com/watch?v=I7wdcJ3YhoU}
}
@misc{spdx,
  title         = {Software Package Data Exchange (SPDX)},
  author        = {{Software Package Data Exchange}},
  year          = {2010},
  url           = {https://spdx.org/}
}
@misc{sri,
  title         = {Subresource Integrity. W3C Recommendation. W3C},
  author        = {Akhawe, Devdatta and Braun, Frederik and Marier, Francois and Weinberger, Joel},
  year          = {2016},
  url           = {https://www.w3.org/TR/SRI/}
}
@article{strangfeld_2024,
  title         = {{Reproducibility of Computational Environments for Software Development}},
  author        = {Strangfeld, Marvin},
  year          = {2024},
  month         = oct,
  doi           = {10.5281/zenodo.13843189},
  school        = {RWTH Aachen University}
}
@misc{strip-nondeterminism,
  title         = {Strip Nondeterminism},
  author        = {{Strip Nondeterminism}},
  year          = {2014},
  url           = {https://salsa.debian.org/reproducible-builds/strip-nondeterminism}
}
@article{SurveyFlakyTests,
  title         = {A Survey of Flaky Tests},
  author        = {Parry, Owain and Kapfhammer, Gregory M. and Hilton, Michael and McMinn, Phil},
  year          = {2021},
  month         = {oct},
  journal       = {ACM Trans. Softw. Eng. Methodol.},
  publisher     = {Association for Computing Machinery},
  address       = {New York, NY, USA},
  volume        = {31},
  number        = {1},
  doi           = {10.1145/3476105},
  issn          = {1049-331X},
  issue_date    = {January 2022},
  abstract      = {Tests that fail inconsistently, without changes to the code under test, are described as flaky. Flaky tests do not give a clear indication of the presence of software bugs and thus limit the reliability of the test suites that contain them. A recent survey of software developers found that 59\% claimed to deal with flaky tests on a monthly, weekly, or daily basis. As well as being detrimental to developers, flaky tests have also been shown to limit the applicability of useful techniques in software testing research. In general, one can think of flaky tests as being a threat to the validity of any methodology that assumes the outcome of a test only depends on the source code it covers. In this article, we systematically survey the body of literature relevant to flaky test research, amounting to 76 papers. We split our analysis into four parts: addressing the causes of flaky tests, their costs and consequences, detection strategies, and approaches for their mitigation and repair. Our findings and their implications have consequences for how the software-testing community deals with test flakiness, pertinent to practitioners and of interest to those wanting to familiarize themselves with the research area.},
  articleno     = {17},
  numpages      = {74},
  keywords      = {Flaky tests, software testing}
}
@misc{swguix2018,
  title         = {{S}oftware {H}eritage and {G}{N}{U} {G}uix join forces to enable long term reproducibility},
  author        = {{Software Heritage}},
  year          = {2019},
  url           = {https://www.softwareheritage.org/2019/04/18/software-heritage-and-gnu-guix-join-forces-to-enable-long-term-reproducibility/}
}
@inbook{swh,
  title         = {The Software Heritage Open Science Ecosystem},
  author        = {Cosmo, Roberto Di and Zacchiroli, Stefano},
  year          = {2023},
  booktitle     = {Software Ecosystems},
  publisher     = {Springer International Publishing},
  pages         = {33â€“61},
  doi           = {10.1007/978-3-031-36060-2_2},
  isbn          = {9783031360602}
}
@misc{SWHArchive,
  title         = {Software Heritage Archive Website},
  author        = {{Software Heritage Archive}},
  year          = {2016},
  url           = {https://archive.softwareheritage.org/}
}
@online{teb,
  title         = {La Tronche En Biais},
  author        = {Thomas C. Durand and Vled Tapas},
  url           = {https://www.youtube.com/user/TroncheEnBiais},
  date          = {2014},
  organization  = {Youtube}
}
@online{teb-r13y-crisis-lib,
  title         = {SCIENCES : Une crise de reproductibilit\'{e} des \'{e}tudes ?},
  author        = {Thomas C. Durand and Vled Tapas},
  url           = {https://www.youtube.com/watch?v=OA8Eki7fvAw},
  date          = {2024},
  organization  = {La Tronche En Biais}
}
@misc{TelegramReproducible,
  title         = {Reproducible Builds for iOS and Android},
  year          = {2019},
  url           = {https://telegram.org/blog/verifiable-apps-and-more}
}
@software{terraform,
  title         = {Terraform},
  author        = {{HashiCorp}},
  year          = {2014},
  url           = {https://www.terraform.io/}
}
@article{Thompson84,
  title         = {Reflections on Trusting Trust},
  author        = {Ken Thompson},
  year          = {1984},
  journal       = {Commun. {ACM}},
  volume        = {27},
  number        = {8},
  pages         = {761--763},
  doi           = {10.1145/358198.358210},
  timestamp     = {Wed, 14 Nov 2018 10:22:35 +0100},
  biburl        = {https://dblp.org/rec/journals/cacm/Thompson84.bib},
  bibsource     = {dblp computer science bibliography, https://dblp.org}
}
@misc{ThoughtsOnSystemsManagementMethods,
  title         = {Thoughts on systems management methods},
  author        = {Kauhaus, Christian},
  year          = {2016},
  url           = {https://flyingcircus.io/news/detailsansicht/thoughts-on-systems-management-methods}
}
@book{tlpi,
  title         = {The Linux Programming Interface: A Linux and UNIX System Programming Handbook},
  author        = {Kerrisk, Michael},
  year          = {2010},
  publisher     = {No Starch Press},
  address       = {USA},
  isbn          = {1593272200},
  edition       = {1st}
}
@inproceedings{Traugott2002,
  title         = {Why Order Matters: Turing Equivalence in Automated Systems Administration},
  author        = {Traugott, Steve and Brown, Lance},
  year          = {2002},
  booktitle     = {Proceedings of the 16th USENIX Conference on System Administration},
  location      = {Philadelphia, PA},
  publisher     = {USENIX Association},
  address       = {USA},
  series        = {LISA '02},
  pages         = {99â€“120},
  url           = {http://www.infrastructures.org/papers/turing/turing.html},
  abstract      = {Hosts in a well-architected enterprise infrastructure are self-administered; they perform their own maintenance and upgrades. By definition, self-administered hosts execute self-modifying code. They do not behave according to simple state machine rules, but can incorporate complex feedback loops and evolutionary recursion.The implications of this behavior are of immediate concern to the reliability, security, and ownership costs of enterprise and mission-critical computing. In retrospect, it appears that the same concerns also apply to manually-administered machines, in which administrators use tools that execute in the context of the target disk to change the contents of the same disk. The self-modifying behavior of both manual and automatic administration techniques helps explain the difficulty and expense of maintaining high availability and security in conventionally-administered infrastructures.The practice of infrastructure architecture tool design exists to bring order to this self-referential chaos. Conventional systems administration can be greatly improved upon through discipline, culture, and adoption of practices better fitted to enterprise needs. Creating a low-cost maintenance strategy largely remains an art. What can we do to put this art into the hands of relatively junior administrators? We think that part of the answer includes adopting a well-proven strategy for maintenance tools, based in part upon the theoretical properties of computing.In this paper, we equate self-administered hosts to Turing machines in order to help build a theoretical foundation for understanding this behavior. We discuss some tools that provide mechanisms for reliably managing self-administered hosts, using deterministic ordering techniques.Based on our findings, it appears that no tool, written in any language, can predictably administer an enterprise infrastructure without maintaining a deterministic, repeatable order of changes on each host. The runtime environment for any tool always executes in the context of the target operating system; changes can affect the behavior of the tool itself, creating circular dependencies. The behavior of these changes may be difficult to predict in advance, so testing is necessary to validate changed hosts. Once changes have been validated in testing they must be replicated in production in the same order in which they were tested, due to these same circular dependencies.The least-cost method of managing multiple hosts also appears to be deterministic ordering. All other known management methods seem to include either more testing or higher risk for each host managed.This paper is a living document; revisions and discussion can be found at Infrastructures.Org, a project of TerraLuna, LLC.},
  numpages      = {22}
}
@article{TSE2019,
  title         = {What Do Package Dependencies Tell Us About Semantic Versioning?},
  author        = {Decan, Alexandre and Mens, Tom},
  year          = {2021},
  journal       = {IEEE Transactions on Software Engineering},
  volume        = {47},
  number        = {6},
  pages         = {1226--1240},
  doi           = {10.1109/TSE.2019.2918315},
  keywords      = {Ecosystems;Software;Semantics;Packaging;Libraries;Java;Computer bugs;Software engineering;distribution, maintenance, and enhancement;maintainability;version control;metrics/measurement;reusable software;reusable libraries;configuration management;software release management and delivery}
}
@software{typst,
  title         = {{Typst}},
  author        = {M\"{a}dje, Laurenz and Haug, Martin and {The Typst Project Developers}},
  url           = {https://github.com/typst/typst},
  license       = {Apache-2.0}
}
@misc{typstdoc,
  title         = {Typst documentation website},
  author        = {{Typst Documentation}},
  year          = {2023},
  url           = {https://typst.app/docs/}
}
@misc{typstReproducibleBuildIssue1,
  title         = {Enhancing reproducibility of Typst documents with SOURCE\_DATE\_EPOCH},
  author        = {{Github Typst project}},
  year          = {2024},
  url           = {https://github.com/typst/typst/issues/3806}
}
@misc{typstReproducibleBuildIssue2,
  title         = {More control over typst compilation environment},
  author        = {{Github Typst project}},
  year          = {2024},
  url           = {https://github.com/typst/typst/issues/3892}
}
@software{vscode,
  title         = {Visual Studio Code},
  author        = {{Microsoft}},
  year          = {2015},
  url           = {https://code.visualstudio.com/}
}
@article{Wilkinson2016,
  title         = {The FAIR Guiding Principles for scientific data management and stewardship},
  author        = {Wilkinson, Mark D. and Dumontier, Michel and Aalbersberg, IJsbrand Jan and Appleton, Gabrielle and Axton, Myles and Baak, Arie and Blomberg, Niklas and Boiten, Jan-Willem and da Silva Santos, Luiz Bonino and Bourne, Philip E. and Bouwman, Jildau and Brookes, Anthony J. and Clark, Tim and Crosas, Merc{\`e} and Dillo, Ingrid and Dumon, Olivier and Edmunds, Scott and Evelo, Chris T. and Finkers, Richard and Gonzalez-Beltran, Alejandra and Gray, Alasdair J.G. and Groth, Paul and Goble, Carole and Grethe, Jeffrey S. and Heringa, Jaap and 't Hoen, Peter A.C and Hooft, Rob and Kuhn, Tobias and Kok, Ruben and Kok, Joost and Lusher, Scott J. and Martone, Maryann E. and Mons, Albert and Packer, Abel L. and Persson, Bengt and Rocca-Serra, Philippe and Roos, Marco and van Schaik, Rene and Sansone, Susanna-Assunta and Schultes, Erik and Sengstag, Thierry and Slater, Ted and Strawn, George and Swertz, Morris A. and Thompson, Mark and van der Lei, Johan and van Mulligen, Erik and Velterop, Jan and Waagmeester, Andra and Wittenburg, Peter and Wolstencroft, Katherine and Zhao, Jun and Mons, Barend},
  year          = {2016},
  month         = {Mar},
  day           = {15},
  journal       = {Scientific Data},
  volume        = {3},
  number        = {1},
  pages         = {160018},
  doi           = {10.1038/sdata.2016.18},
  issn          = {2052-4463},
  abstract      = {There is an urgent need to improve the infrastructure supporting the reuse of scholarly data. A diverse set of stakeholders---representing academia, industry, funding agencies, and scholarly publishers---have come together to design and jointly endorse a concise and measureable set of principles that we refer to as the FAIR Data Principles. The intent is that these may act as a guideline for those wishing to enhance the reusability of their data holdings. Distinct from peer initiatives that focus on the human scholar, the FAIR Principles put specific emphasis on enhancing the ability of machines to automatically find and use the data, in addition to supporting its reuse by individuals. This Comment is the first formal publication of the FAIR Principles, and includes the rationale behind them, and some exemplar implementations in the community.}
}
@misc{xz,
  title         = {XZ Utils},
  author        = {Lasse Collin},
  year          = {2009},
  url           = {https://tukaani.org/xz/}
}
@misc{Zenodo,
  title         = {Zenodo},
  author        = {{European Organization For Nuclear Research} and {OpenAIRE}},
  year          = {2013},
  publisher     = {CERN},
  doi           = {10.25495/7GXK-RD71},
  url           = {https://www.zenodo.org/},
  keywords      = {FOS: Physical sciences, Publication, Dataset},
  language      = {en}
}
